const express = require('express');const {validateK8SSecretConfigSync, encodeK8SSecretConfigSync} = require('./helpers/k8SMongoSecretHelper');const app = express();const port = process.env.TOOLS_PORT || 6000;const bodyParser = require('body-parser');app.use(bodyParser.json()); // support json encoded bodiesapp.use(bodyParser.urlencoded({extended: true})); // support encoded bodiesapp.use(function (err, req, res, next) {       console.error(err.stack)       res.status(500).send(JSON.stringify(err));})const server = app.listen(port, function () {    const host = server.address().address;    const port = server.address().port;    console.log(`Benchmark Tools Server started listening on listening ${host}:${port} at ${new Date()}`)});app.post('/createK8SMongoSecret', async (req, res, next) => {    const config = req.body;    try {        validateK8SSecretConfigSync(config);        const str = JSON.stringify(encodeK8SSecretConfigSync(config));        res.writeHead(200, {'Content-Type': 'application/json'});        res.end(str);    } catch (err) {        //TODO Fixe error emission        //res.writeHead(500, {'Content-Type': 'application/json'});        res.status(422).json(err.message);    }});const shutdown = (signal) => {    if (!signal) {        console.log(`${agent} API Server shutting down at ${new Date()}`);    } else {        console.log(`Signal ${signal} : Benchmark Tools Server shutting down at ${new Date()}`);    }    server.close(function () {        process.exit(0);    })};process.on('SIGTERM', function () {    shutdown('SIGTERM');});process.on('SIGINT', function () {    shutdown('SIGINT');});module.exports = {server, shutdown};